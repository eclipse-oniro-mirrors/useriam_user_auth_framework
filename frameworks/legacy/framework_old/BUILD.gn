# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

config("userauth_framework_legacy_config") {
  include_dirs = [
    "inc",
    "//base/useriam/user_auth_framework/frameworks/legacy/inner_api_old/user_auth",
    "//base/useriam/user_auth_framework/frameworks/legacy/inner_api_old/co_auth",
    "//base/useriam/user_auth_framework/frameworks/legacy/inner_api_old/user_idm",
    "//base/useriam/user_auth_framework/frameworks/legacy/inner_api_old/common",
  ]
}

ohos_source_set("framework_legacy") {
  include_dirs = [
    "inc",
    "//base/useriam/user_auth_framework/common/utils",
    "//base/useriam/user_auth_framework/common/logs",
  ]

  sources = [
    "src/auth_executor.cpp",
    "src/auth_executor_registry.cpp",
    "src/auth_message.cpp",
    "src/coauth_proxy.cpp",
    "src/executor_callback_stub.cpp",
    "src/executor_messenger_proxy.cpp",
    "src/executor_mgr.cpp",
    "src/user_auth.cpp",
    "src/user_auth_native.cpp",
    "src/user_idm.cpp",
    "src/userauth_async_stub.cpp",
    "src/userauth_proxy.cpp",
    "src/useridm_callback_stub.cpp",
    "src/useridm_client.cpp",
    "src/useridm_getinfo_callback_stub.cpp",
    "src/useridm_getsecinfo_callback_stub.cpp",
    "src/useridm_proxy.cpp",
  ]

  deps = [
    "//base/useriam/user_auth_framework/frameworks/native/common:attributes",
    "//base/useriam/user_auth_framework/frameworks/native/common:dfx",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "samgr_standard:samgr_proxy",
    "utils_base:utils",
  ]

  if (defined(ability_runtime_graphics) && ability_runtime_graphics) {
    deps += [ "//foundation/graphic/graphic_2d:libsurface" ]
    external_deps += [ "face_auth:faceauth_framework" ]
    defines = [ "SUPPORT_SURFACE" ]
  }

  configs = [ "//base/useriam/user_auth_framework/common:iam_log_config" ]

  public_configs = [ ":userauth_framework_legacy_config" ]

  remove_configs = [ "//build/config/compiler:no_exceptions" ]

  part_name = "user_auth_framework"
}
