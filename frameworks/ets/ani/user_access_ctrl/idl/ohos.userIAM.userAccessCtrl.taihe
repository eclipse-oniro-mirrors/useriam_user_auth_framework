/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@!namespace("@ohos.userIAM.userAccessCtrl", "userAccessCtrl")

from ohos.userIAM.userAuth.userAuth use AuthTrustLevel, UserAuthType;

@!sts_inject("""
static { loadLibrary("useraccessctrl_ani.z"); }
""")

enum AuthTokenType : i32 {
    TOKEN_TYPE_LOCAL_AUTH = 0,
    TOKEN_TYPE_LOCAL_RESIGN = 1,
    TOKEN_TYPE_COAUTH = 2
}

struct AuthToken {
    challenge: @typedarray Array<u8>;
    authTrustLevel: AuthTrustLevel;
    authType: UserAuthType;
    tokenType: AuthTokenType;
    userId: i32;
    timeInterval: i64;
    secureUid: Optional<i64>;
    enrolledId: Optional<i64>;
    credentialId: Optional<i64>;
}

@gen_promise("verifyAuthToken")
function verifyAuthTokenSync(authToken: @typedarray Array<u8>, allowableDuration: i32): AuthToken;