# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

if (!defined(global_parts_info) ||
    defined(global_parts_info.account_os_account)) {
  has_os_account_part = true
} else {
  has_os_account_part = false
}

ohos_source_set("userauth_services_ipc") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "../../cfi_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"
  include_dirs = [
    "inc",
    "../../frameworks/js/napi/user_auth/inc",
  ]

  remove_configs = [ "//build/config/compiler:no_exceptions" ]

  sources = [
    "src/co_auth_service.cpp",
    "src/executor_messenger_service.cpp",
    "src/hdi_message_callback_service.cpp",
    "src/template_cache_manager.cpp",
    "src/user_auth_service.cpp",
    "src/user_idm_service.cpp",
  ]

  deps = [
    "../../common:iam_utils",
    "../../frameworks/native/common:attributes",
    "../../frameworks/native/common:dfx",
    "../../frameworks/native/ipc:userauth_service_ipc",
    "../context:userauth_service_context",
    "../remote_connect:userauth_service_remote_connect",
  ]

  external_deps = [
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "c_utils:utils",
    "device_manager:devicemanagersdk",
    "drivers_interface_user_auth:libuser_auth_proxy_3.0",
    "dsoftbus:softbus_client",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbeget_proxy",
    "ipc:ipc_single",
    "napi:ace_napi",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  if (has_os_account_part) {
    cflags_cc = [ "-DHAS_OS_ACCOUNT_PART" ]
    external_deps += [ "os_account:os_account_innerkits" ]
  }

  configs = [
    "../base:userauth_service_base_config",
    "../../common:iam_log_config",
    "../core:userauth_service_core_config",
    "../remote_connect:userauth_service_remote_connect_config",
  ]

  subsystem_name = "useriam"
  part_name = "user_auth_framework"
}
